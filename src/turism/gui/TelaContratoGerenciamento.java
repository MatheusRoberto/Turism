/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package turism.gui;

import com.mysql.jdbc.Connection;
import java.awt.Color;
import java.io.InputStream;
import java.text.DecimalFormat;
import java.text.DecimalFormatSymbols;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.HashMap;
import java.util.Locale;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JButton;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import net.sf.jasperreports.engine.JRException;
import turism.conexao.Conexao;
import turism.conexao.ConexaoReport;
import turism.controle.AssentoDAO;
import turism.controle.ContratoDAO;
import turism.controle.DepedenteDAO;
import turism.controle.FormaPGDAO;
import turism.controle.HoteisContratadosDAO;
import turism.controle.ParcelaDAO;
import turism.controle.UsuarioDAO;
import turism.controle.VeiculosContratadosDAO;
import turism.modelo.Assento;
import turism.modelo.AssentoPK;
import turism.modelo.Cidade;
import turism.modelo.Cliente;
import turism.modelo.Contrato;
import turism.modelo.Depedente;
import turism.modelo.Estado;
import turism.modelo.Formapagamento;
import turism.modelo.Hoteiscontratados;
import turism.modelo.HoteiscontratadosPK;
import turism.modelo.Pais;
import turism.modelo.Parcela;
import turism.modelo.Veiculoscontratados;
import turism.modelo.VeiculoscontratadosPK;
import turism.modelo.Viagem;
import turism.regra.DepedenteTableModel;
import turism.regra.PassageiroTableModel;
import turism.regra.ViagemTableModel;

/**
 *
 * @author matheus
 */
public class TelaContratoGerenciamento extends javax.swing.JFrame {

    //Estancias
    Contrato contrato = new Contrato();
    Viagem viagem = new Viagem();
    Cliente cliente = new Cliente();
    ContratoDAO cDAO = new ContratoDAO();

    //ArrayList
    ArrayList<Contrato> contratos = new ArrayList<>();
    ArrayList<Formapagamento> formas = new ArrayList<>();
    ArrayList<Cliente> clientes = new ArrayList<>();
    ArrayList<Depedente> depedentes = new ArrayList<>();
    ArrayList<Parcela> parcelas = new ArrayList<>();
    ArrayList<Viagem> viagens = new ArrayList<>();
    ArrayList<Pais> paises = new ArrayList<>();
    ArrayList<Estado> estados = new ArrayList<>();
    ArrayList<Cidade> origens = new ArrayList<>();
    ArrayList<Cidade> destinos = new ArrayList<>();
    ArrayList<Date> datas = new ArrayList<>();
    ArrayList<Hoteiscontratados> hoteiscontratados = new ArrayList<>();
    ArrayList<HoteiscontratadosPK> hoteiscontratadospk = new ArrayList<>();
    ArrayList<Veiculoscontratados> veiculoscontratados = new ArrayList<>();
    ArrayList<VeiculoscontratadosPK> veiculoscontratadospk = new ArrayList<>();
    ArrayList<Assento> assentos = new ArrayList<>();
    ArrayList<AssentoPK> assentospk = new ArrayList<>();

    //Modelos JTable
    ViagemTableModel modeloViagem;
    PassageiroTableModel modeloPassageiro;
    DepedenteTableModel modeloDepedente;

    //formato dinheiro
    private static final Locale BRAZIL = new Locale("pt", "BR");
    private static final DecimalFormatSymbols REAL = new DecimalFormatSymbols(BRAZIL);
    public static final DecimalFormat DINHEIRO_REAL = new DecimalFormat("¤ ###,###,##0.00", REAL);
    public static final DecimalFormat ITENS = new DecimalFormat("###,###,##0");

    //Vetor para assento
    ArrayList<JButton> seats = new ArrayList<>();
    Map<AssentoPK, Boolean> ocupados = new HashMap<>();

    /**
     * Creates new form TelaContrato
     */
    public TelaContratoGerenciamento() {
        initComponents();
        this.carregaTable();
        this.carregaForma();
        JVisualizacao.setVisible(false);
        painelDepedente.setVisible(true);
        painelParcela.setVisible(false);
    }

    public TelaContratoGerenciamento(Contrato c) {
        initComponents();
        this.carregaTable();
        carregaContrato(c);
        JVisualizacao.setVisible(false);
        painelDepedente.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        painelContrato = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtViagem = new javax.swing.JTextField();
        txtCliente = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        painelVagas = new javax.swing.JPanel();
        txtVagaTotal = new javax.swing.JTextField();
        txtVagaRestante = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jCBHoteis = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jCBVeiculos = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        txtVagaOcupadas = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        painelValor = new javax.swing.JPanel();
        txtValorPessoa = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtValorTotalVenda = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        txtDesconto = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jTPUtil = new javax.swing.JTabbedPane();
        painelPassageiro = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtPassageiro = new javax.swing.JTable();
        painelCliente = new javax.swing.JPanel();
        txtPoltrona = new javax.swing.JSpinner();
        jLabel11 = new javax.swing.JLabel();
        btnBuscarPoltrona = new javax.swing.JButton();
        jCBDepedente = new javax.swing.JCheckBox();
        painelDepedente = new javax.swing.JPanel();
        jSPDepedente = new javax.swing.JScrollPane();
        jtDepedente = new javax.swing.JTable();
        btnAdicionaAssento = new javax.swing.JButton();
        btnRemoveAssento = new javax.swing.JButton();
        painelPagamento = new javax.swing.JPanel();
        jLabel12 = new javax.swing.JLabel();
        jCBFormaPG = new javax.swing.JComboBox<>();
        painelParcela = new javax.swing.JPanel();
        jLabel18 = new javax.swing.JLabel();
        txtNParcela = new javax.swing.JSpinner();
        jLabel19 = new javax.swing.JLabel();
        txtValorParcela = new javax.swing.JTextField();
        jLabel20 = new javax.swing.JLabel();
        dataVenciment = new com.toedter.calendar.JDateChooser();
        jScrollPane3 = new javax.swing.JScrollPane();
        jListDataVencimento = new javax.swing.JList<>();
        jLabel21 = new javax.swing.JLabel();
        btnGeraParcelas = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListParcela = new javax.swing.JList<>();
        painelBotoes = new javax.swing.JPanel();
        btnFinalizar = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        btnVisualizar = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        txtFaltante = new javax.swing.JTextField();
        JVisualizacao = new javax.swing.JInternalFrame();
        txtViagemVisu = new javax.swing.JTextField();
        jLabel22 = new javax.swing.JLabel();
        txtDescontoVisu = new javax.swing.JTextField();
        txtQuantidadeVicu = new javax.swing.JTextField();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        txtValorTotalVendaVisu = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        painelParcelaVisualizacao = new javax.swing.JPanel();
        jLabel46 = new javax.swing.JLabel();
        jLabel47 = new javax.swing.JLabel();
        txtValorParcelaVisu = new javax.swing.JTextField();
        jScrollPane9 = new javax.swing.JScrollPane();
        jListDataVencimentoVisu = new javax.swing.JList<>();
        jLabel49 = new javax.swing.JLabel();
        txtNParcelaVisu = new javax.swing.JTextField();
        jLabel50 = new javax.swing.JLabel();
        txtFormaPGVisu = new javax.swing.JTextField();
        painelClienteVisu = new javax.swing.JPanel();
        txtClienteVisu = new javax.swing.JTextField();
        jLabel48 = new javax.swing.JLabel();
        jScrollPane10 = new javax.swing.JScrollPane();
        jtPassageiroVisu = new javax.swing.JTable();
        painelBotoesVisu = new javax.swing.JPanel();
        btnFinalizarVisu = new javax.swing.JButton();
        btnCancelarVisu = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Alteração de Contratos");

        jLabel2.setText("Viagem:");

        txtViagem.setEditable(false);

        txtCliente.setEditable(false);

        jLabel30.setText("Cliente:");

        painelVagas.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        txtVagaTotal.setEditable(false);

        txtVagaRestante.setEditable(false);

        jLabel7.setText("Vagas Restante:");

        jLabel6.setText("Vagas Total:");

        jCBHoteis.setEnabled(false);

        jLabel4.setText("Hoteis Contratados:");

        jCBVeiculos.setEnabled(false);
        jCBVeiculos.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBVeiculosItemStateChanged(evt);
            }
        });

        jLabel3.setText("Veículos Contratados:");

        txtVagaOcupadas.setEditable(false);

        jLabel10.setText("Vagas Ocupadas:");

        javax.swing.GroupLayout painelVagasLayout = new javax.swing.GroupLayout(painelVagas);
        painelVagas.setLayout(painelVagasLayout);
        painelVagasLayout.setHorizontalGroup(
            painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVagasLayout.createSequentialGroup()
                .addContainerGap(461, Short.MAX_VALUE)
                .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtVagaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(txtVagaOcupadas, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(txtVagaRestante, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
            .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelVagasLayout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jCBVeiculos, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                    .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel4)
                        .addComponent(jCBHoteis, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(479, Short.MAX_VALUE)))
        );
        painelVagasLayout.setVerticalGroup(
            painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelVagasLayout.createSequentialGroup()
                .addContainerGap(22, Short.MAX_VALUE)
                .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelVagasLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtVagaOcupadas, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(painelVagasLayout.createSequentialGroup()
                        .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtVagaTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtVagaRestante, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(27, 27, 27))
            .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelVagasLayout.createSequentialGroup()
                    .addGap(24, 24, 24)
                    .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel3)
                        .addComponent(jLabel4))
                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                    .addGroup(painelVagasLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jCBHoteis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jCBVeiculos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addContainerGap(31, Short.MAX_VALUE)))
        );

        painelValor.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtValorPessoa.setEditable(false);

        jLabel9.setText("Valor por Pessoa:");

        jLabel5.setText("Valor Total:");

        txtValorTotalVenda.setEditable(false);

        jLabel8.setText("Quantidade:");

        txtQuantidade.setEditable(false);

        txtDesconto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescontoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoFocusLost(evt);
            }
        });

        jLabel17.setText("Desconto:");

        javax.swing.GroupLayout painelValorLayout = new javax.swing.GroupLayout(painelValor);
        painelValor.setLayout(painelValorLayout);
        painelValorLayout.setHorizontalGroup(
            painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelValorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtValorPessoa, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel17)
                    .addComponent(txtDesconto, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(110, 110, 110)
                .addGroup(painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtQuantidade)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(61, 61, 61)
                .addGroup(painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtValorTotalVenda)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addGap(94, 94, 94))
        );
        painelValorLayout.setVerticalGroup(
            painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelValorLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelValorLayout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDesconto))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelValorLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtQuantidade, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelValorLayout.createSequentialGroup()
                        .addGroup(painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel5))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelValorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtValorPessoa, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorTotalVenda, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTPUtil.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtPassageiro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passageiro", "Assento:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtPassageiro.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jtPassageiro);

        painelCliente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtPoltrona.setModel(new javax.swing.SpinnerNumberModel(1, 1, 56, 1));
        txtPoltrona.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtPoltronaStateChanged(evt);
            }
        });
        txtPoltrona.addInputMethodListener(new java.awt.event.InputMethodListener() {
            public void inputMethodTextChanged(java.awt.event.InputMethodEvent evt) {
                txtPoltronaInputMethodTextChanged(evt);
            }
            public void caretPositionChanged(java.awt.event.InputMethodEvent evt) {
            }
        });

        jLabel11.setText("Poltrona:");

        btnBuscarPoltrona.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/poltrona_16.png"))); // NOI18N
        btnBuscarPoltrona.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarPoltronaActionPerformed(evt);
            }
        });

        jCBDepedente.setText("Depedentes");
        jCBDepedente.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBDepedenteItemStateChanged(evt);
            }
        });

        painelDepedente.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jtDepedente.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jSPDepedente.setViewportView(jtDepedente);

        javax.swing.GroupLayout painelDepedenteLayout = new javax.swing.GroupLayout(painelDepedente);
        painelDepedente.setLayout(painelDepedenteLayout);
        painelDepedenteLayout.setHorizontalGroup(
            painelDepedenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 536, Short.MAX_VALUE)
            .addGroup(painelDepedenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelDepedenteLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSPDepedente, javax.swing.GroupLayout.DEFAULT_SIZE, 512, Short.MAX_VALUE)
                    .addContainerGap()))
        );
        painelDepedenteLayout.setVerticalGroup(
            painelDepedenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(painelDepedenteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(painelDepedenteLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jSPDepedente, javax.swing.GroupLayout.DEFAULT_SIZE, 170, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        btnAdicionaAssento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/add_64_green.png"))); // NOI18N
        btnAdicionaAssento.setText("Adicionar");
        btnAdicionaAssento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnAdicionaAssento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnAdicionaAssento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionaAssentoActionPerformed(evt);
            }
        });

        btnRemoveAssento.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/close_64.png"))); // NOI18N
        btnRemoveAssento.setText("Remover");
        btnRemoveAssento.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnRemoveAssento.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnRemoveAssento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveAssentoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelClienteLayout = new javax.swing.GroupLayout(painelCliente);
        painelCliente.setLayout(painelClienteLayout);
        painelClienteLayout.setHorizontalGroup(
            painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(painelDepedente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jCBDepedente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(painelClienteLayout.createSequentialGroup()
                        .addComponent(txtPoltrona, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnBuscarPoltrona, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel11, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(76, 76, 76)
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnAdicionaAssento)
                    .addComponent(btnRemoveAssento))
                .addGap(72, 72, 72))
        );
        painelClienteLayout.setVerticalGroup(
            painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelClienteLayout.createSequentialGroup()
                        .addComponent(jCBDepedente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelDepedente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelClienteLayout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelClienteLayout.createSequentialGroup()
                                .addGroup(painelClienteLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBuscarPoltrona, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(btnAdicionaAssento))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnRemoveAssento))
                            .addComponent(txtPoltrona, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 6, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout painelPassageiroLayout = new javax.swing.GroupLayout(painelPassageiro);
        painelPassageiro.setLayout(painelPassageiroLayout);
        painelPassageiroLayout.setHorizontalGroup(
            painelPassageiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 931, Short.MAX_VALUE)
            .addComponent(painelCliente, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        painelPassageiroLayout.setVerticalGroup(
            painelPassageiroLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPassageiroLayout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        jTPUtil.addTab("Passageiros", painelPassageiro);

        jLabel12.setText("Forma de Pagamento:");

        jCBFormaPG.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        jCBFormaPG.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jCBFormaPGItemStateChanged(evt);
            }
        });

        painelParcela.setBorder(javax.swing.BorderFactory.createTitledBorder("Parcelamento"));

        jLabel18.setText("Nº de Parcelas:");

        txtNParcela.setModel(new javax.swing.SpinnerNumberModel(2, 2, null, 1));
        txtNParcela.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                txtNParcelaStateChanged(evt);
            }
        });

        jLabel19.setText("Valor da Parcela:");

        jLabel20.setText("Data de Vencimento:");

        dataVenciment.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                dataVencimentPropertyChange(evt);
            }
        });
        dataVenciment.getJCalendar().setMinSelectableDate(new Date());

        jListDataVencimento.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListDataVencimento.setEnabled(false);
        jScrollPane3.setViewportView(jListDataVencimento);

        jLabel21.setText("Dias de Vencimento:");

        btnGeraParcelas.setText("Gerar Parcelas");
        btnGeraParcelas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGeraParcelasActionPerformed(evt);
            }
        });

        jLabel1.setText("Parcelas Atuais:");

        jListParcela.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(jListParcela);

        javax.swing.GroupLayout painelParcelaLayout = new javax.swing.GroupLayout(painelParcela);
        painelParcela.setLayout(painelParcelaLayout);
        painelParcelaLayout.setHorizontalGroup(
            painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelParcelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelParcelaLayout.createSequentialGroup()
                        .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel21)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(52, 52, 52)
                        .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(painelParcelaLayout.createSequentialGroup()
                        .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel18, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtNParcela))
                        .addGap(32, 32, 32)
                        .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtValorParcela, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(46, 46, 46)
                        .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel20, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(dataVenciment, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(39, 39, 39)
                        .addComponent(btnGeraParcelas)))
                .addGap(0, 42, Short.MAX_VALUE))
        );
        painelParcelaLayout.setVerticalGroup(
            painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelParcelaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18)
                    .addComponent(jLabel19)
                    .addComponent(jLabel20))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(txtNParcela, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                        .addComponent(txtValorParcela)
                        .addComponent(dataVenciment, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnGeraParcelas))
                .addGap(18, 18, 18)
                .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelParcelaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane3))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        painelBotoes.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnFinalizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/shopping_cart_64.png"))); // NOI18N
        btnFinalizar.setText("Finalizar");
        btnFinalizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFinalizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        btnCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/padrao/cancel_64.png"))); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnVisualizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/categories_64.png"))); // NOI18N
        btnVisualizar.setText("Visualizar");
        btnVisualizar.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnVisualizar.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVisualizarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesLayout = new javax.swing.GroupLayout(painelBotoes);
        painelBotoes.setLayout(painelBotoesLayout);
        painelBotoesLayout.setHorizontalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, painelBotoesLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnVisualizar)
                    .addComponent(btnCancelar)
                    .addComponent(btnFinalizar))
                .addGap(97, 97, 97))
        );
        painelBotoesLayout.setVerticalGroup(
            painelBotoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesLayout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(btnVisualizar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnFinalizar)
                .addGap(18, 18, 18)
                .addComponent(btnCancelar)
                .addGap(48, 48, 48))
        );

        jTextField1.setEditable(false);

        jLabel13.setText("Valor Recebido:");

        jLabel14.setText("Valor Faltante:");

        txtFaltante.setEditable(false);

        javax.swing.GroupLayout painelPagamentoLayout = new javax.swing.GroupLayout(painelPagamento);
        painelPagamento.setLayout(painelPagamentoLayout);
        painelPagamentoLayout.setHorizontalGroup(
            painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPagamentoLayout.createSequentialGroup()
                        .addGroup(painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jCBFormaPG, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(45, 45, 45)
                        .addGroup(painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel13)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(48, 48, 48)
                        .addGroup(painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtFaltante, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)))
                    .addComponent(painelParcela, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28))
        );
        painelPagamentoLayout.setVerticalGroup(
            painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelPagamentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelPagamentoLayout.createSequentialGroup()
                        .addComponent(painelBotoes, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(painelPagamentoLayout.createSequentialGroup()
                        .addGroup(painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(painelPagamentoLayout.createSequentialGroup()
                                .addGroup(painelPagamentoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel13)
                                    .addComponent(jLabel14))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelPagamentoLayout.createSequentialGroup()
                                .addGap(21, 21, 21)
                                .addComponent(txtFaltante, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(painelPagamentoLayout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jCBFormaPG)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(painelParcela, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(38, 38, 38))))
        );

        jTPUtil.addTab("Pagamento", painelPagamento);

        javax.swing.GroupLayout painelContratoLayout = new javax.swing.GroupLayout(painelContrato);
        painelContrato.setLayout(painelContratoLayout);
        painelContratoLayout.setHorizontalGroup(
            painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelContratoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jTPUtil, javax.swing.GroupLayout.PREFERRED_SIZE, 933, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(painelValor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, painelContratoLayout.createSequentialGroup()
                            .addGroup(painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel2)
                                .addComponent(txtViagem, javax.swing.GroupLayout.PREFERRED_SIZE, 402, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGap(63, 63, 63)
                            .addGroup(painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel30)
                                .addComponent(txtCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addComponent(painelVagas, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelContratoLayout.setVerticalGroup(
            painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelContratoLayout.createSequentialGroup()
                .addGroup(painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelContratoLayout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addComponent(jLabel2))
                    .addGroup(painelContratoLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel30)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelContratoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtViagem, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(txtCliente))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(painelVagas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelValor, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTPUtil, javax.swing.GroupLayout.PREFERRED_SIZE, 438, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        JVisualizacao.setClosable(true);
        JVisualizacao.setTitle("Visualização Contrato");
        JVisualizacao.setVisible(true);

        txtViagemVisu.setEditable(false);

        jLabel22.setText("Viagem:");

        txtDescontoVisu.setEditable(false);
        txtDescontoVisu.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                txtDescontoVisuFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtDescontoVisuFocusLost(evt);
            }
        });

        txtQuantidadeVicu.setEditable(false);

        jLabel27.setText("Desconto:");

        jLabel28.setText("Valor Total:");

        txtValorTotalVendaVisu.setEditable(false);

        jLabel29.setText("Quantidade:");

        painelParcelaVisualizacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Parcelamento"));

        jLabel46.setText("Nº de Parcelas:");

        jLabel47.setText("Valor da Parcela:");

        txtValorParcelaVisu.setEditable(false);

        jListDataVencimentoVisu.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jListDataVencimentoVisu.setEnabled(false);
        jScrollPane9.setViewportView(jListDataVencimentoVisu);

        jLabel49.setText("Dias de Vencimento:");

        txtNParcelaVisu.setEditable(false);

        javax.swing.GroupLayout painelParcelaVisualizacaoLayout = new javax.swing.GroupLayout(painelParcelaVisualizacao);
        painelParcelaVisualizacao.setLayout(painelParcelaVisualizacaoLayout);
        painelParcelaVisualizacaoLayout.setHorizontalGroup(
            painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelParcelaVisualizacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelParcelaVisualizacaoLayout.createSequentialGroup()
                        .addComponent(jLabel49)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(painelParcelaVisualizacaoLayout.createSequentialGroup()
                        .addGroup(painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(painelParcelaVisualizacaoLayout.createSequentialGroup()
                                .addGroup(painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(jLabel46, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtNParcelaVisu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel47, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(txtValorParcelaVisu, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 194, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        painelParcelaVisualizacaoLayout.setVerticalGroup(
            painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelParcelaVisualizacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel46)
                    .addComponent(jLabel47))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(painelParcelaVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(txtValorParcelaVisu, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE)
                    .addComponent(txtNParcelaVisu, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(10, 10, 10)
                .addComponent(jLabel49)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane9)
                .addContainerGap())
        );

        jLabel50.setText("Forma de Pagamento:");

        txtFormaPGVisu.setEditable(false);

        painelClienteVisu.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));

        txtClienteVisu.setEditable(false);

        jLabel48.setText("Cliente:");

        jtPassageiroVisu.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Passageiro", "Assento:"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane10.setViewportView(jtPassageiroVisu);

        javax.swing.GroupLayout painelClienteVisuLayout = new javax.swing.GroupLayout(painelClienteVisu);
        painelClienteVisu.setLayout(painelClienteVisuLayout);
        painelClienteVisuLayout.setHorizontalGroup(
            painelClienteVisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteVisuLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(painelClienteVisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(painelClienteVisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(txtClienteVisu, javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane10, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 700, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLabel48))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        painelClienteVisuLayout.setVerticalGroup(
            painelClienteVisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelClienteVisuLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel48)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtClienteVisu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane10, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        painelBotoesVisu.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        btnFinalizarVisu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/shopping_cart_64.png"))); // NOI18N
        btnFinalizarVisu.setText("Finalizar");
        btnFinalizarVisu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnFinalizarVisu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnFinalizarVisu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarVisuActionPerformed(evt);
            }
        });

        btnCancelarVisu.setIcon(new javax.swing.ImageIcon(getClass().getResource("/turism/imagens/padrao/cancel_64.png"))); // NOI18N
        btnCancelarVisu.setText("Cancelar");
        btnCancelarVisu.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnCancelarVisu.setVerticalTextPosition(javax.swing.SwingConstants.BOTTOM);
        btnCancelarVisu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarVisuActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout painelBotoesVisuLayout = new javax.swing.GroupLayout(painelBotoesVisu);
        painelBotoesVisu.setLayout(painelBotoesVisuLayout);
        painelBotoesVisuLayout.setHorizontalGroup(
            painelBotoesVisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(painelBotoesVisuLayout.createSequentialGroup()
                .addComponent(btnFinalizarVisu)
                .addGap(33, 33, 33)
                .addComponent(btnCancelarVisu))
        );
        painelBotoesVisuLayout.setVerticalGroup(
            painelBotoesVisuLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(btnFinalizarVisu)
            .addComponent(btnCancelarVisu)
        );

        javax.swing.GroupLayout JVisualizacaoLayout = new javax.swing.GroupLayout(JVisualizacao.getContentPane());
        JVisualizacao.getContentPane().setLayout(JVisualizacaoLayout);
        JVisualizacaoLayout.setHorizontalGroup(
            JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JVisualizacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JVisualizacaoLayout.createSequentialGroup()
                        .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(painelClienteVisu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtViagemVisu, javax.swing.GroupLayout.PREFERRED_SIZE, 645, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(JVisualizacaoLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(JVisualizacaoLayout.createSequentialGroup()
                        .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel27)
                            .addComponent(txtDescontoVisu, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtQuantidadeVicu)
                            .addComponent(jLabel29, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txtValorTotalVendaVisu)
                            .addComponent(jLabel28, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel50, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(JVisualizacaoLayout.createSequentialGroup()
                                .addComponent(txtFormaPGVisu, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(109, 109, 109)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(painelParcelaVisualizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, JVisualizacaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(painelBotoesVisu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(442, 442, 442))
        );
        JVisualizacaoLayout.setVerticalGroup(
            JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(JVisualizacaoLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel22)
                .addGap(6, 6, 6)
                .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(JVisualizacaoLayout.createSequentialGroup()
                        .addComponent(txtViagemVisu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JVisualizacaoLayout.createSequentialGroup()
                                .addComponent(jLabel27)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtDescontoVisu))
                            .addGroup(JVisualizacaoLayout.createSequentialGroup()
                                .addComponent(jLabel29)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtQuantidadeVicu, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, JVisualizacaoLayout.createSequentialGroup()
                                .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel50))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(JVisualizacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtValorTotalVendaVisu, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE)
                                    .addComponent(txtFormaPGVisu))))
                        .addGap(18, 18, 18)
                        .addComponent(painelClienteVisu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(painelParcelaVisualizacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(painelBotoesVisu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(JVisualizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(painelContrato, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(0, 0, Short.MAX_VALUE)
                    .addComponent(JVisualizacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGap(0, 0, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnBuscarPoltronaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarPoltronaActionPerformed
        // TODO add your handling code here:
        /*int indice = jCBVeiculos.getSelectedIndex();
        if (indice > -1) {
            this.chaveBackdround(false);
            jAssento.setVisible(true);
            consultaPoltrona(indice);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Veículo!");
        }
         */
    }//GEN-LAST:event_btnBuscarPoltronaActionPerformed

    private void jCBDepedenteItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBDepedenteItemStateChanged
        // TODO add your handling code here:
        if (jCBDepedente.isSelected() == true) {
            if (cliente.getIdcliente() != null) {
                painelDepedente.setVisible(true);
                depedentes.clear();
                DepedenteDAO dDAO = new DepedenteDAO();
                depedentes = dDAO.buscaDepedenteCliente(cliente.getIdcliente());
                modeloDepedente.limpar();
                modeloDepedente.addListaDepedente(depedentes);
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um cliente!");
            }
        } else {
            painelDepedente.setVisible(false);
            depedentes.clear();
        }
    }//GEN-LAST:event_jCBDepedenteItemStateChanged

    private void btnAdicionaAssentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionaAssentoActionPerformed
        // TODO add your handling code here:
        Assento a = new Assento();
        AssentoPK apk = new AssentoPK();

        if (cliente.getIdcliente() != null && viagem.getIdviagem() != null) {
            int indice = jCBVeiculos.getSelectedIndex();

            if (indice > -1) {
                int poltrona = (int) txtPoltrona.getValue();

                if (poltrona <= veiculoscontratados.get(indice).getVeiculo().getLotacao()) {
                    apk.setIdassento(poltrona);
                    //apk.setIdcontrato(cDAO.selecionaUltimo().getIdcontrato() + 1);
                    apk.setIdveiculo(veiculoscontratados.get(indice).getVeiculo().getIdveiculo());

                    if (!this.poltronaOcupada(apk)) {
                        JOptionPane.showMessageDialog(this, "Poltrona Ocupada");
                    } else {
                        a.setAssentoPK(apk);
                        if (jCBDepedente.isSelected()) {
                            indice = jtDepedente.getSelectedRow();
                            if (indice > -1) {
                                a.setNome(depedentes.get(indice).getNome());
                                a.setRg(depedentes.get(indice).getRg());
                            } else {
                                a.setNome(cliente.getNome());
                                a.setRg(cliente.getRg());
                            }
                        } else {
                            a.setNome(cliente.getNome());
                            a.setRg(cliente.getRg());
                        }
                        assentos.add(a);
                        assentospk.add(apk);
                        modeloPassageiro.addItem(a);
                        ocupados.put(apk, true);
                        this.vagasTotal();
                        this.valorTotal();
                        this.alteraCorbtnPoltrona();
                    }
                } else {
                    JOptionPane.showMessageDialog(this, "Poltrona inexistente!");
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um Veículo");
            }

        } else {
            JOptionPane.showMessageDialog(this, "Selecione um cliente e uma viagem!");
        }
    }//GEN-LAST:event_btnAdicionaAssentoActionPerformed

    private void jCBVeiculosItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBVeiculosItemStateChanged
        // TODO add your handling code here:
        int indice = jCBVeiculos.getSelectedIndex();
        if (indice > -1) {
            //this.inicializaJButton(veiculoscontratados.get(indice).getVeiculo().getLotacao());
            //criaPoltronas(indice);
            this.alteraCorbtnPoltrona();
            //this.carregaAssento(veiculoscontratados.get(indice).getVeiculo().getIdveiculo(), viagem.getIdviagem());
        }
    }//GEN-LAST:event_jCBVeiculosItemStateChanged

    private void btnRemoveAssentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveAssentoActionPerformed
        // TODO add your handling code here:
        int indice = jtPassageiro.getSelectedRow();
        AssentoDAO aDAO = new AssentoDAO();
        if (indice > -1) {
            ocupados.remove(assentos.get(indice).getAssentoPK());
            aDAO.apagar(assentos.get(indice));
            assentos.remove(indice);
            modeloPassageiro.removeItem(indice);
            this.valorTotal();
            this.vagasTotal();
            this.alteraCorbtnPoltrona();
        }
    }//GEN-LAST:event_btnRemoveAssentoActionPerformed

    private void txtPoltronaInputMethodTextChanged(java.awt.event.InputMethodEvent evt) {//GEN-FIRST:event_txtPoltronaInputMethodTextChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_txtPoltronaInputMethodTextChanged

    private void txtPoltronaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtPoltronaStateChanged
        // TODO add your handling code here:
        this.alteraCorbtnPoltrona();
    }//GEN-LAST:event_txtPoltronaStateChanged

    private void btnGeraParcelasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGeraParcelasActionPerformed
        // TODO add your handling code here:
        int parcel = Integer.valueOf(txtNParcela.getValue().toString());
        Date d = dataVenciment.getDate();
        this.geraDataParcela(parcel, d);
    }//GEN-LAST:event_btnGeraParcelasActionPerformed

    private void txtNParcelaStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_txtNParcelaStateChanged
        // TODO add your handling code here:
        int nparcela = Integer.valueOf(txtNParcela.getValue().toString());
        this.valorTotal();
        this.geraDataParcela(nparcela, dataVenciment.getDate());
    }//GEN-LAST:event_txtNParcelaStateChanged

    private void txtDescontoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoFocusLost
        // TODO add your handling code here:
        double valor = 0;
        if (!txtDesconto.getText().isEmpty()) {
            String texto = txtDesconto.getText();
            texto = texto.replaceAll(",", ".");
            valor = Double.valueOf(texto);
        }
        txtDesconto.setText(DINHEIRO_REAL.format(valor));
        this.valorTotal();
    }//GEN-LAST:event_txtDescontoFocusLost

    private void txtDescontoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoFocusGained
        // TODO add your handling code here:
        txtDesconto.setText(String.valueOf(removeCifrao(txtDesconto.getText())));
        txtDesconto.selectAll();
    }//GEN-LAST:event_txtDescontoFocusGained

    private void jCBFormaPGItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jCBFormaPGItemStateChanged
        // TODO add your handling code here:
        if (jCBFormaPG.getSelectedItem() != null) {
            if (jCBFormaPG.getSelectedItem().toString().equalsIgnoreCase("parcelado")) {
                painelParcela.setVisible(true);
            } else {
                painelParcela.setVisible(false);
            }
        }
    }//GEN-LAST:event_jCBFormaPGItemStateChanged

    private void btnVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVisualizarActionPerformed
        // TODO add your handling code here:
        int indice = jCBFormaPG.getSelectedIndex();
        if (indice > -1) {
            this.chaveBackdround(false);
            JVisualizacao.setVisible(true);
            carregaVisu();
        } else {
            JOptionPane.showMessageDialog(this, "Escolha uma forma de pagamento!");
        }
    }//GEN-LAST:event_btnVisualizarActionPerformed

    private void txtDescontoVisuFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoVisuFocusGained
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescontoVisuFocusGained

    private void txtDescontoVisuFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtDescontoVisuFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_txtDescontoVisuFocusLost

    private void btnCancelarVisuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarVisuActionPerformed
        // TODO add your handling code here:
        this.chaveBackdround(true);
        JVisualizacao.setVisible(false);
    }//GEN-LAST:event_btnCancelarVisuActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        // TODO add your handling code here:
        if (jCBFormaPG.getSelectedItem() != null) {
            this.carregaContrato();
            cDAO.atualizar(contrato);
            AssentoDAO aDAO = new AssentoDAO();
            assentospk.forEach((apk) -> {
                assentos.stream().filter((a) -> (a.getAssentoPK().equals(apk))).forEachOrdered((a) -> {
                    apk.setIdcontrato(contrato.getIdcontrato());
                    a.setAssentoPK(apk);
                    aDAO.adicionar(a);
                });
            });
            if (jCBFormaPG.getSelectedItem().toString().equalsIgnoreCase("Parcelado")) {
                double pago = this.valorPago();
                ParcelaDAO pDAO = new ParcelaDAO();
                parcelas.forEach((parc) -> {
                    pDAO.apagar(parc);
                });
                geraParcela();
                this.pagamentoMontante(pago);
                contrato.setPaga(false);
                cDAO.atualizar(contrato);
                int op;
                op = JOptionPane.showConfirmDialog(this, "Deseja imprimir o Carne? ", "Carne", JOptionPane.YES_NO_OPTION);
                if (JOptionPane.YES_OPTION == op) {
                    this.imprimeCarne();
                }
            } else if (jCBFormaPG.getSelectedItem().toString().equalsIgnoreCase("Á Vista")) {
                contrato.setPaga(true);
                cDAO.atualizar(contrato);
            }
            JOptionPane.showMessageDialog(this, "Venda concluída com sucesso!");
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma forma de pagamento!");
        }
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void dataVencimentPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_dataVencimentPropertyChange
        // TODO add your handling code here:
        int nparcelas = Integer.valueOf(txtNParcela.getValue().toString());
        this.geraDataParcela(nparcelas, dataVenciment.getDate());
    }//GEN-LAST:event_dataVencimentPropertyChange

    private void btnFinalizarVisuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarVisuActionPerformed
        // TODO add your handling code here:
        btnFinalizarActionPerformed(evt);
    }//GEN-LAST:event_btnFinalizarVisuActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.limpar();
    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaContratoGerenciamento.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TelaContratoGerenciamento().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JInternalFrame JVisualizacao;
    private javax.swing.JButton btnAdicionaAssento;
    private javax.swing.JButton btnBuscarPoltrona;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCancelarVisu;
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnFinalizarVisu;
    private javax.swing.JButton btnGeraParcelas;
    private javax.swing.JButton btnRemoveAssento;
    private javax.swing.JButton btnVisualizar;
    private com.toedter.calendar.JDateChooser dataVenciment;
    private javax.swing.JCheckBox jCBDepedente;
    private javax.swing.JComboBox<String> jCBFormaPG;
    private javax.swing.JComboBox<String> jCBHoteis;
    private javax.swing.JComboBox<String> jCBVeiculos;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel46;
    private javax.swing.JLabel jLabel47;
    private javax.swing.JLabel jLabel48;
    private javax.swing.JLabel jLabel49;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel50;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList<String> jListDataVencimento;
    private javax.swing.JList<String> jListDataVencimentoVisu;
    private javax.swing.JList<String> jListParcela;
    private javax.swing.JScrollPane jSPDepedente;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane10;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTabbedPane jTPUtil;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTable jtDepedente;
    private javax.swing.JTable jtPassageiro;
    private javax.swing.JTable jtPassageiroVisu;
    private javax.swing.JPanel painelBotoes;
    private javax.swing.JPanel painelBotoesVisu;
    private javax.swing.JPanel painelCliente;
    private javax.swing.JPanel painelClienteVisu;
    private javax.swing.JPanel painelContrato;
    private javax.swing.JPanel painelDepedente;
    private javax.swing.JPanel painelPagamento;
    private javax.swing.JPanel painelParcela;
    private javax.swing.JPanel painelParcelaVisualizacao;
    private javax.swing.JPanel painelPassageiro;
    private javax.swing.JPanel painelVagas;
    private javax.swing.JPanel painelValor;
    private javax.swing.JTextField txtCliente;
    private javax.swing.JTextField txtClienteVisu;
    private javax.swing.JTextField txtDesconto;
    private javax.swing.JTextField txtDescontoVisu;
    private javax.swing.JTextField txtFaltante;
    private javax.swing.JTextField txtFormaPGVisu;
    private javax.swing.JSpinner txtNParcela;
    private javax.swing.JTextField txtNParcelaVisu;
    private javax.swing.JSpinner txtPoltrona;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtQuantidadeVicu;
    private javax.swing.JTextField txtVagaOcupadas;
    private javax.swing.JTextField txtVagaRestante;
    private javax.swing.JTextField txtVagaTotal;
    private javax.swing.JTextField txtValorParcela;
    private javax.swing.JTextField txtValorParcelaVisu;
    private javax.swing.JTextField txtValorPessoa;
    private javax.swing.JTextField txtValorTotalVenda;
    private javax.swing.JTextField txtValorTotalVendaVisu;
    private javax.swing.JTextField txtViagem;
    private javax.swing.JTextField txtViagemVisu;
    // End of variables declaration//GEN-END:variables

    private void limpar() {
        modeloDepedente.limpar();
        modeloPassageiro.limpar();
        modeloViagem.limpar();
        txtNParcela.setValue(1);
        dataVenciment.setDate(new Date());

        jCBDepedente.setSelected(false);
        jCBFormaPG.setSelectedIndex(-1);
        jCBHoteis.setSelectedIndex(-1);
        jCBVeiculos.setSelectedIndex(-1);

        datas.clear();
        assentos.clear();
        assentospk.clear();

        this.vagasTotal();
        this.valorTotal();

    }

    private void chaveBackdround(boolean b) {
        painelContrato.setVisible(b);
    }

    private void carregaForma() {
        formas.clear();
        FormaPGDAO fpgDAO = new FormaPGDAO();
        formas = fpgDAO.buscaFormas("");
        jCBFormaPG.removeAllItems();
        jCBFormaPG.removeAllItems();
        formas.forEach((next) -> {
            jCBFormaPG.addItem(next.getNome());
        });

        int in = (formas.get(contrato.getIdforma().getIdformapagamento() - 1).getIdformapagamento() - 1);
        jCBFormaPG.setSelectedIndex(in);
        jCBFormaPGItemStateChanged(null);
//        if (jCBFormaPG.getSelectedItem() != null) {
//            if (jCBFormaPG.getSelectedItem().toString().equalsIgnoreCase("parcelado")) {
//                painelParcela.setVisible(true);
//            } else {
//                painelParcela.setVisible(false);
//            }
//        }
    }

    private void carregaTable() {
        modeloPassageiro = new PassageiroTableModel();
        jtPassageiro.setModel(modeloPassageiro);
        jtPassageiro.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        int t = jtPassageiro.getSize().width;
        jtPassageiro.getColumnModel().getColumn(0).setPreferredWidth((int) (t * 0.7));
        jtPassageiro.getColumnModel().getColumn(1).setPreferredWidth((int) (t * 0.2));
        jtPassageiro.getColumnModel().getColumn(2).setPreferredWidth((int) (t * 0.1));

        modeloDepedente = new DepedenteTableModel();
        jtDepedente.setModel(modeloDepedente);
        //jtDepedente.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        jtDepedente.getColumnModel().getColumn(0).setPreferredWidth((int) (t * 0.7));
        jtDepedente.getColumnModel().getColumn(1).setPreferredWidth((int) (t * 0.3));

        jtPassageiroVisu.setModel(modeloPassageiro);
        jtPassageiroVisu.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        t = jtPassageiroVisu.getSize().width;
        jtPassageiroVisu.getColumnModel().getColumn(0).setPreferredWidth((int) (t * 0.7));
        jtPassageiroVisu.getColumnModel().getColumn(1).setPreferredWidth((int) (t * 0.2));
        jtPassageiroVisu.getColumnModel().getColumn(2).setPreferredWidth((int) (t * 0.1));
    }

    private void carregaVeiculo(int indice) {
        jCBVeiculos.removeAllItems();
        if (indice >= 0) {
            VeiculosContratadosDAO vcDAO = new VeiculosContratadosDAO();
            veiculoscontratados = vcDAO.buscaVeiculosContratadosViagem(indice);
            veiculoscontratados.forEach((Veiculoscontratados next) -> {
                jCBVeiculos.addItem(next.getVeiculo().getNome());
            });
            jCBVeiculos.setSelectedIndex(-1);
            jCBVeiculos.setEnabled(true);
        }
    }

    private void carregaHotel(int indice) {
        HoteisContratadosDAO hcDAO = new HoteisContratadosDAO();
        hoteiscontratados = hcDAO.buscaHoteisContratadosViagem(indice);
        jCBHoteis.removeAllItems();
        hoteiscontratados.forEach((next) -> {
            jCBHoteis.addItem(next.getHotel().getNome());
        });
        jCBHoteis.setSelectedIndex(-1);
        jCBHoteis.setEnabled(true);
    }

    private int vagasTotal() {
        int total = 0, ocupadas = 0;
        if (!veiculoscontratados.isEmpty() || veiculoscontratados != null) {
            total = veiculoscontratados.stream().map((next) -> next.getVeiculo().getLotacao()).reduce(total, Integer::sum);
        }

        if (!ocupados.isEmpty()) {
            ocupadas = ocupados.size();
        }
        txtVagaOcupadas.setText(String.valueOf(ITENS.format(ocupadas)));
        txtVagaRestante.setText(String.valueOf(ITENS.format(total - ocupadas)));
        txtVagaTotal.setText(String.valueOf(ITENS.format(total)));
        return total;
    }

    private void valorTotal() {
        double total = 0, pessoa, onibus = 0, hotel = 0, desconto = 0;
        int nparcela = Integer.valueOf(txtNParcela.getValue().toString());
        if (!txtDesconto.getText().isEmpty()) {
            desconto = this.removeCifrao(txtDesconto.getText());
        } else {
            txtDesconto.setText(DINHEIRO_REAL.format(desconto));
        }
        if (!veiculoscontratados.isEmpty()) {
            for (Veiculoscontratados next : veiculoscontratados) {
                if (next.getValor() > onibus) {
                    onibus = next.getValor();
                }
            }
        }
        if (!hoteiscontratados.isEmpty()) {
            for (Hoteiscontratados hoteu : hoteiscontratados) {
                if (hoteu.getValor() > hotel) {
                    hotel = hoteu.getValor();
                }
            }
        }

        pessoa = onibus + hotel;
        txtValorPessoa.setText(String.valueOf(DINHEIRO_REAL.format(pessoa)));
        if (!assentos.isEmpty()) {
            total = pessoa * assentos.size();
        }
        total -= desconto;
        txtQuantidade.setText(ITENS.format(assentos.size()));
        txtValorTotalVenda.setText(DINHEIRO_REAL.format(total));
        txtValorParcela.setText(DINHEIRO_REAL.format(this.valorParcela(total, nparcela)));
    }

    private boolean poltronaOcupada(AssentoPK apk) {
        return ocupados.keySet().stream().noneMatch((pk) -> ((pk.getIdassento() == apk.getIdassento()) && (pk.getIdveiculo() == apk.getIdveiculo())));
    }

    private void alteraCorbtnPoltrona() {
        int indice = jCBVeiculos.getSelectedIndex();
        if (indice > -1) {
            AssentoPK apk = new AssentoPK();
            apk.setIdassento(Integer.valueOf(txtPoltrona.getValue().toString()));
            // apk.setIdcontrato(cDAO.selecionaUltimo().getIdcontrato() + 1);
            apk.setIdveiculo(veiculoscontratados.get(indice).getVeiculo().getIdveiculo());
            if (this.poltronaOcupada(apk)) {
                btnBuscarPoltrona.setBackground(Color.GREEN);
            } else {
                btnBuscarPoltrona.setBackground(Color.RED);
            }
        }
    }

    private void geraDataParcela(int nparcelas, Date d) {
        GregorianCalendar gc = new GregorianCalendar();
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        int numPar = nparcelas;
        Date diaAtual;
        datas.clear();
        if (d == null) {
            diaAtual = new Date();
        } else {
            diaAtual = d;
        }
        DefaultListModel modelo = new DefaultListModel();
        modelo.clear();
        for (int e = 0; e < numPar; e++) {
            gc.setTime(diaAtual);
            gc.add(GregorianCalendar.MONTH, e);
            Date date = gc.getTime();
            modelo.addElement(df.format(date));
            datas.add(date);
        }
        jListDataVencimento.setModel(modelo);
        jListDataVencimentoVisu.setModel(modelo);
    }

    private double valorParcela(Double v, int nparcelas) {
        return v / nparcelas;
    }

    private double removeCifrao(String texto) {
        Number valor = 0;
        if (!texto.isEmpty()) {
            try {
                valor = DINHEIRO_REAL.parse(texto);
            } catch (ParseException ex) {
                Logger.getLogger(TelaContratoGerenciamento.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

        return valor.doubleValue();
    }

    private void carregaVisu() {
        txtClienteVisu.setText(txtCliente.getText());
        txtDescontoVisu.setText(txtDesconto.getText());
        txtFormaPGVisu.setText(jCBFormaPG.getSelectedItem().toString());
        txtNParcelaVisu.setText(txtNParcela.getValue().toString());
        txtQuantidadeVicu.setText(txtQuantidade.getText());
        txtValorParcelaVisu.setText(txtValorParcela.getText());
        txtValorTotalVendaVisu.setText(txtValorTotalVenda.getText());
        txtViagemVisu.setText(txtViagem.getText());
    }

    private void carregaContrato() {
        contrato.setDataemissao(new Date());
        if (cliente.getIdcliente() != null) {
            contrato.setIdcliente(cliente);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um Cliente!");
        }
        int indice = jCBFormaPG.getSelectedIndex();
        if (indice > -1) {
            contrato.setIdforma(formas.get(indice));
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma Forma de Pagamento!");
        }
        UsuarioDAO uDAO = new UsuarioDAO();
        contrato.setIdusuario(uDAO.buscaUltimo());
        if (viagem.getIdviagem() != null) {
            contrato.setIdviagem(viagem);
        } else {
            JOptionPane.showMessageDialog(this, "Selecione uma Viagem");
        }
        contrato.setQuantidade(assentos.size());
        contrato.setPaga(false);
        contrato.setDesconto(removeCifrao(txtDesconto.getText()));
    }

    private void geraParcela() {
        Parcela p;
        ParcelaDAO pDAO = new ParcelaDAO();
        for (Date date : datas) {
            p = new Parcela();
            p.setDatavencimento(date);
            p.setPaga(false);
            p.setValor(removeCifrao(txtValorParcela.getText()));
            p.setContrato(contrato);
            pDAO.adiconar(p);
        }
    }

    private void carregaAssento(int idvi) {
        AssentoDAO aDAO = new AssentoDAO();
        //ocupados.clear();
        aDAO.buscaAssento(idvi).forEach((assent) -> {
            ocupados.put(assent, true);
        });
    }

    private void imprimeCarne() {
        InputStream inputStream = this.getClass().getResourceAsStream("/turism/reports/Parte1_Carne_Landscape.jasper");

        // mapa de parâmetros do relatório (ainda vamos aprender a usar)
        Map<String, Object> parametros = new HashMap();
        parametros.put("id", contrato.getIdcontrato());
//        parametros.put("Parte2_Carne_Landscape.jasper", sub);
//        parametros.put("REPORT_CONNECTION", sub);
        parametros.put("SUBREPORT_DIR", "/turism/reports/");

        try {

            // abre o relatório
            ConexaoReport.openReport("Carne: ", inputStream, parametros, (Connection) Conexao.getConnection());

        } catch (JRException exc) {
        }
    }

    private void carregaContrato(Contrato c) {
        contrato = c;
        viagem = contrato.getIdviagem();
        cliente = contrato.getIdcliente();

        txtCliente.setText(cliente.getNome());
        SimpleDateFormat df = new SimpleDateFormat("dd/MM/yyyy");
        txtViagem.setText(viagem.getIdorigem().getNome() + " á " + viagem.getIddestino().getNome() + " Data: " + df.format(viagem.getDataida()));

        jCBDepedente.setSelected(true);
        carregaAssento(viagem.getIdviagem());
        carregaHotel(viagem.getIdviagem());
        carregaVeiculo(viagem.getIdviagem());
        carregaForma();

        AssentoDAO aDAO = new AssentoDAO();
        assentos = aDAO.buscaArrayAssentoContrato(contrato.getIdcontrato());

        modeloPassageiro.addListaPassageiro(assentos);

        ParcelaDAO pDAO = new ParcelaDAO();
        parcelas = pDAO.buscaParcelaViagemContrato(contrato.getIdviagem().getIdviagem(), contrato.getIdcontrato());

        jListParcela.removeAll();
        DefaultListModel modeloP = new DefaultListModel();
        String pg = "";
        double total = 0, tpg = 0;
        for (Parcela p : parcelas) {
            pg = "";
            total += p.getValor();
            if (p.getPaga()) {
                pg = "Paga";
                tpg += p.getValor();
            }
            modeloP.addElement(df.format(p.getDatavencimento()) + " " + DINHEIRO_REAL.format(p.getValor()) + " " + pg);
            txtFaltante.setText(DINHEIRO_REAL.format(total - tpg));
            jTextField1.setText(DINHEIRO_REAL.format(tpg));
        }

        jListParcela.setModel(modeloP);
        this.valorTotal();
        this.vagasTotal();
    }

    private double valorPago() {
        double total = 0;
        total = parcelas.stream().filter((pa) -> (pa.getPaga())).map((pa) -> pa.getValor()).reduce(total, (accumulator, _item) -> accumulator + _item);
        return total;
    }

    private void pagamentoMontante(double valor) {
        if (valor > 0) {
            double recebido = valor;
            double total = 0;
            int vezes, indice = 0;
            double v;
            ParcelaDAO pDAO = new ParcelaDAO();
            parcelas = pDAO.buscaParcelaViagemContrato(contrato.getIdviagem().getIdviagem(), contrato.getIdcontrato());

            total = parcelas.stream().map((p) -> p.getValor()).reduce(total, (accumulator, _item) -> accumulator + _item);

            v = total / parcelas.size();

            Parcela p = parcelas.get(indice);
            vezes = (int) (recebido / v);

            if (vezes > 0) {
                p = parcelas.get(indice);
                while (p.getValor() <= recebido) {
                    p = parcelas.get(indice);
                    p.setPaga(true);
                    p.setDatapagamento(new Date());
                    indice++;
                    recebido -= p.getValor();
                }
                if (recebido > 0) {
                    p = parcelas.get(indice - 1);
                    p.setValor(p.getValor() + recebido);
                    p = parcelas.get(indice);
                    p.setValor(p.getValor() - recebido);
                }
            } else {
                p.setValor(recebido);
                p.setPaga(true);
                p.setDatapagamento(new Date());
                indice++;
                p = parcelas.get(indice);
                p.setValor(p.getValor() + (p.getValor() - recebido));
            }

            parcelas.forEach((parc) -> {
                pDAO.atualizar(parc);
            });
        }
    }
}
